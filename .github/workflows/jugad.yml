name: Jugad

on:
  push:
    branches: [main]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Zip Folder
        run: zip -jpr dist.zip dist/        

  DeployTest:
    name: Deploy to Test
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: Development
      url: https://github.com/VikashSingh23/heroangular/deployments
    steps:
      - name: Deploy to S3
        run: |
          npm install aws-sdk
          node -e '
            const AWS = require("aws-sdk");
            const fs = require("fs");

            const s3 = new AWS.S3({ region: "ap-south-1" });
            
            const syncParams = {
              Bucket: "front-prod-s3-bucket",
              Prefix: "dist/",
              ACL: "public-read",
              Exclude: ["node_modules/*", "src/*", "e2e/*", ".github/*"],
            };

            function syncDirectory(dirPath) {
              const files = fs.readdirSync(dirPath, { withFileTypes: true });
              files.forEach(file => {
                const filePath = dirPath + "/" + file.name;
                if (file.isDirectory()) {
                  syncDirectory(filePath);
                } else {
                  const fileData = fs.readFileSync(filePath);
                  const s3Params = {
                    ...syncParams,
                    Key: filePath.replace("dist/", ""),
                    Body: fileData,
                    ContentType: getContentType(filePath),
                  };
                  s3.putObject(s3Params, (error, data) => {
                    if (error) {
                      console.error("Error uploading file", filePath, error);
                    } else {
                      console.log("Successfully uploaded file", filePath);
                    }
                  });
                }
              });
            }

            function getContentType(filePath) {
              // Implement logic to determine the content type of the file based on the file extension
              // Example: For JavaScript files, return "application/javascript"
              // For simplicity, you can set a default content type like "application/octet-stream"
              return "application/octet-stream";
            }

            syncDirectory("dist");
          '

  DeployProd:
    name: Deploy to Production
    needs: [DeployTest, Build]
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://github.com/VikashSingh23/heroangular/deployments
    steps:
      - name: Deploy to S3
        run: |
          npm install aws-sdk
          node -e '
            const AWS = require("aws-sdk");
            const fs = require("fs");

            const s3 = new AWS.S3({ region: "ap-south-1" });
            
            const syncParams = {
              Bucket: "front-prod-s3-bucket",
              Prefix: "dist/",
              ACL: "public-read",
              Exclude: ["node_modules/*", "src/*", "e2e/*", ".github/*"],
            };

            function syncDirectory(dirPath) {
              const files = fs.readdirSync(dirPath, { withFileTypes: true });
              files.forEach(file => {
                const filePath = dirPath + "/" + file.name;
                if (file.isDirectory()) {
                  syncDirectory(filePath);
                } else {
                  const fileData = fs.readFileSync(filePath);
                  const s3Params = {
                    ...syncParams,
                    Key: filePath.replace("dist/", ""),
                    Body: fileData,
                    ContentType: getContentType(filePath),
                  };
                  s3.putObject(s3Params, (error, data) => {
                    if (error) {
                      console.error("Error uploading file", filePath, error);
                    } else {
                      console.log("Successfully uploaded file", filePath);
                    }
                  });
                }
              });
            }

            function getContentType(filePath) {
              // Implement logic to determine the content type of the file based on the file extension
              // Example: For JavaScript files, return "application/javascript"
              // For simplicity, you can set a default content type like "application/octet-stream"
              return "application/octet-stream";
            }

            syncDirectory("dist");
          '
